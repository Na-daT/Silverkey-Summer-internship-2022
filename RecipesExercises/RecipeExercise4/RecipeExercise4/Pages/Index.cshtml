@page
@model IndexModel
@inject SweetAlertService Swal;
@{
    ViewData["Title"] = "Home page";
    var recipeUrl = @Model.MyUrl + "recipe";
    var recipePostUrl = @Model.MyUrl + "recipes";
    var categoriesUrl = @Model.MyUrl + "category";
}

<head>
    <script src="//unpkg.com/alpinejs" defer></script>
    <!-- Alpine Plugins -->
    <script defer src="https://unpkg.com/alpinejs/intersect@3.x.x/dist/cdn.min.js"></script>
</head>
<div x-data="{recipeOpen: false}" x-intersect="recipeOpen = true">
    <header>
        <div class=" container-fluid text-center">
            <div class="row justify-content-center border-bottom">
                <div class="col-md-4 m-2">
                    <img src="images/logo-black.png" alt="logo" class="img-fluid">
                </div>
            </div>
            <div class="row justify-content-center border-bottom py-2">
                <div class=" col-sm-1">
                    <a href="#button1" class="text-black">Home</a>
                </div>
                <div class=" col-sm-1">
                    <a href="#recipeSection" x-on:click="recipeOpen=true" class="text-black">Recipes</a>
                </div>
                <div class=" col-sm-1">
                    <a href="#button1" class="text-black">Categories</a>
                </div>
            </div>
    </header>

    <div class="row pt-5 pb-3 mb-1 my-3 text-center justify-content-center ">
        <div class="col-md-6 px-0">
            <h3 class="display-6">Welcome</h3>
            <h1 class="display-4 fst-italic">Nada's Recipes Website</h1>
            <p class="lead my-3">A simple website where you can store, edit, and delete your recipes and their
                different
                categories.</p>
            <p class="lead mb-3 mt-3"><a href="#recipeSection" class="link-dark fw-bold"
                    x-on:click="recipeOpen = true">Check
                    out our Recipes</a></p>
            <img src="/images/ArrowDown.svg" />
        </div>
    </div>
    <section style="background-color:#F1EEE8;" x-show="recipeOpen" x-trap="recipeOpen" x-transition.duration.700ms
        x-cloak>
        <div class="container text-center" id="recipeSection">
            <h1 class="display-4 pt-4 fst-italic lead">Recipes</h1>
            <p class="lead my-3">Here you can find all the recipes you have stored in our website.</p>
        </div>
        <div x-data="{ recipes: [] }"
            x-init="recipes = await fetch('@recipeUrl',{method: 'GET', mode:'cors'}).then(response=>response.json()).then(data => recipes = data)">
            <div class="container pb-4 pt-2">
                <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-md-4 g-3">
                    <template x-for="recipe in recipes">
                        <div class="col " x-show="recipeOpen" x-transition.duration.1500ms>
                            <div class="card shadow-sm" id="cardHover" x-on:click="">
                                <div class="card-body">
                                    <h5 class="card-title fs-4 mx-1" x-text="recipe.title"></h5>
                                    <template x-for="category in recipe.categories">
                                        <span class="badge rounded-pill bg-secondary p-1 mx-1"
                                            x-text="category.name"></span>
                                    </template>
                                    @* <div class="row">
                                        <div class="col-9">
                                        <a class=" link-primary mx-1" data-bs-toggle="modal">Details</a>
                                        </div>
                                        </div> *@
                                </div>
                            </div>
                        </div>
                    </template>
                </div>
            </div>
        </div>
        <div class="container text-center pb-3">
            <div class="row justify-content-lg-end">
                <div class="col-md-4">
                    <a class="lead m-3  fw-bold link-dark" data-bs-toggle="modal" data-bs-target="#newRecipeModal">You
                        can
                        add new recipes
                        here...</a>
                </div>
            </div>
        </div>
    </section>
</div>

<div class="modal fade" id="newRecipeModal" tabindex="-1" aria-labelledby="newRecipeModal" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="staticBackdropLabel">New Recipe</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div x-data="{
                    newRecipe: {
                        title: '',
                        ingredients: [],
                        instructions: [],
                        categories: [],
                    },
                    categoriesList:[]}"
                    x-init="await fetch('@categoriesUrl',{method: 'GET', mode:'cors'}).then(response=>response.json()).then(data => categoriesList = data)">
                    <form method="post"
                        x-on:submit="await fetch('@recipePostUrl',{method:'POST', headers: {'Content-Type': 'application/json'}, body: JSON.stringify(newRecipe)}).then(respone => response.json())">
                        <label for="recipeTitle">Recipe title</label>
                        <input type="text" class="form-control" id="recipeTitle" x-model="newRecipe.title"
                            placeholder="Enter recipe title" required>
                        <label for="recipeIngredients">Ingredients</label>
                        <textarea class="form-control" id="recipeIngredients" rows="3" x-model="newRecipe.ingredients"
                            placeholder="Enter ingredients" required></textarea>
                        <label for="recipeInstructions">Instructions</label>
                        <textarea class="form-control" id="recipeInstructions" rows="3" x-model="newRecipe.instructions"
                            placeholder="Enter instructions" required></textarea>
                        <label for="recipeCategories">Categories</label>
                        <select class="form-control" id="recipeCategories" x-model="newRecipe.categories" multiple>
                            <template x-for="category in categoriesList">
                                <option x-text="category.name"></option>
                            </template>
                        </select>
                        <button type="submit" class="btn btn-primary mt-3">Add Recipe</button>
                    </form>
                </div>
            </div>
        </div>

    </div>

    @* <script>
        document.addEventListener('alpine:init', async () => {
        const result = await fetch('@recipeUrl', { method: 'GET', mode: 'cors' }).then(response =>
        response.json()).then(data => recipes = data);
        if (!result.ok) {
        throw new Error('${result.stauts}: ${await result.text()}');
        }
        Alpine.store('recipes', {
        my_data: await result.json(),
        })
        })
        </script> *@