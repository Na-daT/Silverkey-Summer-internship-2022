@page
@model IndexModel
@inject SweetAlertService Swal;
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@{
    ViewData["Title"] = "Home page";
    var recipeUrl = @Model.MyUrl + "recipe";
    var recipePostUrl = @Model.MyUrl + "recipes";
    var categoriesUrl = @Model.MyUrl + "category";
    var categoriesPostUrl = @Model.MyUrl + "categories";
    var requestToken = Antiforgery.GetAndStoreTokens(HttpContext).RequestToken;
}

@section Scripts{
<script>
    async function loadRecipes(search) {
        var recipesList = await getRecipesAsync();
        if (search === String.empty) {
            return recipesList;
        }
        var result = [];
        for (var i = 0; i < recipesList.length; i++) {
            if (recipesList[i].title.toLowerCase().indexOf(search.toLowerCase()) > -1) {
                result.push(recipesList[i]);
            }
        }
        return result;
    }
    async function getRecipesAsync() {
        const response = await fetch('@recipeUrl', { method: 'GET', headers: { 'RequestVerificationToken': '@requestToken' } })
            .then(res => { return res })
        if (response.ok) {
            const json = await response.json();
            return json;
        }
    }
    async function getCategoriesAsync() {
        const response = await fetch('@categoriesUrl', { method: 'GET', headers: { 'RequestVerificationToken': '@requestToken' } })
            .then(res => { return res })
        if (response.ok) {
            return response.json()
        }
    }
    async function deleteRecipeAsync(recipe) {
        const alert = await Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: 'grey',
            confirmButtonText: 'Yes, delete it!'
        });
        if (alert.value === true) {
            const response = await fetch('@recipePostUrl' + '/' + recipe.id, {
                method: 'DELETE',
                headers: {
                    'RequestVerificationToken': '@requestToken'
                }
            }).then(res => { return res })
            if (response.ok) {
                await Swal.fire({
                    title: 'Deleted!',
                    icon: 'success',
                    confirmButtonText: 'Ok',
                    confirmButtonColor: '#2C7A48'
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.hash = '#mainJump';
                        window.location.reload(true);
                    }
                })
            }
            else {
                await Swal.fire({
                    title: 'Error!',
                    icon: 'Try again later.',
                    confirmButtonText: 'Ok',
                    confirmButtonColor: '#2C7A48'
                })
            }
        }
    }
</script>
<script>
    async function updateMyRecipeAsync(recipeToUpdate, selectedCategories) {
        myCategories = await getCategoriesAsync();
        recipeToUpdate.categories = [];
        let myList = [];
        for (let i = 0; i < selectedCategories.names.length; i++) {
            let temp1 = myCategories.filter(fetchedCategory => fetchedCategory.name === selectedCategories.names[i])
            myList = myList.concat(temp1);
        }
        recipeToUpdate.categories = myList;
        const alert = await Swal.fire({
            title: 'Confirm new updates?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#2C7A48',
            cancelButtonColor: 'grey',
            confirmButtonText: 'Yes, update it!'
        })
        if (alert.value === true) {
            const result = await fetch('@recipePostUrl', {
                method: 'PUT',
                body: JSON.stringify(recipeToUpdate),
                headers: {
                    'Content-Type': 'application/json;',
                    'RequestVerificationToken': '@requestToken'
                }
            }).then(res => { return res })
            if (result.ok) {
                await Swal.fire({
                    title: 'Success!',
                    text: 'Recipe updated!',
                    icon: 'success',
                    confirmButtonText: 'Ok',
                    confirmButtonColor: '#2C7A48'
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.hash = '#mainJump';
                        window.location.reload(true);
                    }
                })
            }
        }
    }
    async function recipeToPostAsync(newRecipe, myCategories) {
        let myListyy = [];
        for (let i = 0; i < newRecipe.categories.length; i++) {
            let temp = myCategories.filter(fetchedCategory => fetchedCategory.name === newRecipe.categories[i])
            myListyy = myListyy.concat(temp);
        }
        newRecipe.categories = myListyy;
        const response = await fetch('@recipePostUrl', {
            method: 'POST',
            body: JSON.stringify(newRecipe),
            headers: {
                'Content-Type': 'application/json;',
                'RequestVerificationToken': '@requestToken'
            }
        }).then(res => { return res })
        if (response.ok) {
            Swal.fire({
                title: 'Success!',
                text: 'Recipe created!',
                icon: 'success',
                confirmButtonText: 'Ok'
            })
                .then((result) => {
                    if (result.isConfirmed) {
                        window.location.hash = '#mainJump';
                        window.location.reload(true);
                    }
                })
        }
        else {
            Swal.fire({
                title: 'Error!',
                text: 'Recipe not created! please try again.',
                icon: 'error',
                confirmButtonText: 'Ok'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.hash = '#creationForms';
                    window.location.reload(true);
                }
            })
        }
    }
    async function categoryToPostAsync(newCategory) {
        const response = await fetch('@categoriesPostUrl', {
            method: 'POST',
            body: JSON.stringify(newCategory),
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': '@requestToken'
            }
        }).then(res => { return res })
        if (response.ok) {
            Swal.fire({
                title: 'Success!',
                text: 'Category created!',
                icon: 'success',
                confirmButtonText: 'Ok'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.hash = '#categoriesSection';
                    window.location.reload(true);
                }
            })
        }
        else {
            Swal.fire({
                title: 'Error!',
                text: 'Category not created! please try again',
                icon: 'error',
                confirmButtonText: 'Ok'
            })
        }
    }

    async function updateCategoryAsync(categoryToUpdate, whichCategory) {
        var recipesDataTemp = await getRecipesAsync();
        const response = await fetch('@categoriesPostUrl', {
            method: 'PUT',
            body: JSON.stringify(categoryToUpdate),
            headers: {
                'Content-Type': 'application/json;',
                'RequestVerificationToken': '@requestToken'
            }
        }).then(res => { return res })
        if (response.ok) {
            whichCategory = 0;
            for (let i = 0; i < recipesDataTemp.length; i++) {
                if (recipesDataTemp[i].categories.find(category => category.id === categoryToUpdate.id) !== undefined) {
                    recipesDataTemp[i].categories = recipesDataTemp[i].categories.filter(category => category.id !== categoryToUpdate.id);
                    recipesDataTemp[i].categories.push(categoryToUpdate);
                    await fetch('@recipePostUrl', {
                        method: 'PUT',
                        body: JSON.stringify(recipesDataTemp[i]),
                        headers: {
                            'Content-Type': 'application/json;',
                            'RequestVerificationToken': '@requestToken'
                        }
                    });
                }
            }
            await Swal.fire({
                title: 'Success!',
                text: 'Category updated!',
                icon: 'success',
                confirmButtonText: 'Ok'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.hash = '#categoriesSection';
                    window.location.reload(true);
                }
            })
        }
        return whichCategory;
    }
</script>
<script>
    function hideRecipes() {
        document.getElementById('recipesCards').style.display = 'none';
    }
</script>

}

<head>
    <script defer src="https://unpkg.com/@Html.Raw('@')alpinejs/intersect@3.x.x/dist/cdn.min.js"></script>
    <script defer src="https://unpkg.com/@Html.Raw('@')alpinejs/focus@3.x.x/dist/cdn.min.js"></script>
    <script src="//unpkg.com/alpinejs" defer></script>
</head>
<div x-data="{recipeOpen: false, detailCards: true}" x-intersect="recipeOpen = true">
    <header>
        <div class=" container-fluid text-center">
            <div class="row justify-content-center border-bottom">
                <div class="col-md-4 m-2">
                    <img src="images/logo-black.png" alt="logo" class="img-fluid">
                </div>
            </div>
            <div class="row justify-content-center border-bottom py-2">
                <div class=" col-sm-1">
                    <a href="#" class="text-black">Home</a>
                </div>
                <div class=" col-sm-1">
                    <a href="#recipeSection" class="text-black">Recipes</a>
                </div>
                <div class=" col-sm-1">
                    <a href="#categoriesSection" class="text-black">Categories</a>
                </div>
            </div>
        </div>
    </header>
    @*Login*@
    <div>
        
    </div>
    @*Main Section*@
    <div class="row pt-5 pb-3 mb-1 my-3 text-center justify-content-center">
        <div class="col-md-6 px-0">
            <h3 class="display-6" style="color: #135C2D;">Welcome</h3>
            <h1 class="display-4 fst-italic" style="color: #135C2D;">Nada's Recipes Wesbsite</h1>
            <p class="lead my-3" style="color: #135C2D;">A simple website where you can store, edit, and delete your
                recipes and their
                different
                categories.</p>
            <p class="lead mb-3 mt-3" style="color: #135C2D;"><a href="#recipeSection" class="link-dark fw-bold"
                    style="color: #135C2D;">Check
                    out your Recipes</a></p>
            <img src="/images/ArrowDown.svg" id="mainJump" />
        </div>
    </div>
    @*Recipe Section*@
    <section style="background-color:#F1EEE8;" x-show="recipeOpen" id="recipeSection" x-transition.duration.700ms
        x-cloak>
        <div class="container text-center" id="recipesTitle">
            <h1 class="display-4 pt-4 lead">Recipes</h1>
            <p class="lead mt-3 mb-0">Here you can find all the recipes you have stored in our website.</p>
        </div>
        @*All recipes cards*@
        <div x-data="{recipes: [],whichRecipe: 0, updateRecipe: 0,search:'', loadedRecipes: []}"
            x-init="recipes = await getRecipesAsync()" id="recipesCards">
            <div class="container pb-4 pt-2">
                <div class="row justify-content-end">
                    <div class="col col-sm-3 justify-content-end align-content-end m-2">
                        <input x-ref="searchField" x-model="search"
                            x-on:keydown.window.prevent.slash="$refs.searchField.focus()"
                            placeholder="Search for a recipe..." type="search" class="form-control"
                            x-on:input="loadedRecipes = await loadRecipes(search)" />
                    </div>
                </div>
                <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-md-4 g-3"
                    x-init="loadedRecipes = await loadRecipes(search)">
                    <template x-for="item in loadedRecipes" :key="item.title">
                        <div class="col " x-show="detailCards" x-transition.duration.200ms>
                            <div class="card shadow-sm rounded-0" id="cardHover">
                                <div class="card-body"
                                    x-on:click="whichRecipe=item.id;updateRecipe = 0;detailCards=false; window.location.hash = '#recipeSection'">
                                    <h5 class="card-title fs-4 mx-1" x-text="item.title"></h5>
                                    <template x-for="category in item.categories">
                                        <span class="badge rounded-pill p-1 mx-1" style="background-color:#135C2D;"
                                            x-text="category.name"></span>
                                    </template>
                                </div>
                            </div>
                        </div>
                    </template>
                </div>
            </div>

            @*update recipe forms*@
            <template x-for="recipePicked in loadedRecipes">
                <div class="row justify-content-center p-3 pb-4"
                    x-data="{myCategories: [],recipeToUpdate: {id: '',title: '',ingredients: [],instructions: [],categories: []},selectedCategories: {names: []}}"
                    x-init="myCategories = await getCategoriesAsync()" x-show="updateRecipe === recipePicked.id"
                    x-transition.duration.600ms x-cloak>
                    <div style="background-color: white;" id="recipePicked.id"
                        class="border-bottom round col-md-5 shadow-lg py-2" x-init="recipeToUpdate = recipePicked">
                        <div class="row justify-content-end">
                            <div class="col-md-2">
                                <button class="btn"
                                    x-on:click="updateRecipe = 0;detailCards = true; window.location.hash = '#recipesTitle'">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
                                        class="bi bi-x-lg" viewBox="0 0 16 16">
                                        <path
                                            d="M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8 2.146 2.854Z" />
                                    </svg>
                                </button>
                            </div>
                        </div>
                        <form method="post" class="form-control shadow-sm"
                            x-on:submit.prevent="async()=>{await updateMyRecipeAsync(recipeToUpdate, selectedCategories)}">
                            <div class="form-label text-center">
                                <h1 class="lead fs-3 " x-text="recipeToUpdate.title">
                                </h1>
                            </div>
                            <input aria-hidden="true" x-model="recipeToUpdate.id" hidden>
                            <div class="form-group py-1">
                                <label for="title">Title</label>
                                <input type="text" class="form-control" id="title" name="title"
                                    x-model="recipeToUpdate.title" placeholder="Title" required>
                            </div>
                            <div class="form-group py-1">
                                <label for="recipeIngredients">Ingredients</label>
                                <button type="button" class="btn btn-sm mx-3 my-1"
                                    style="background-color: #2C7A48; color:white;"
                                    x-on:click="recipeToUpdate.ingredients.push(null)">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
                                        class="bi bi-plus-lg" viewBox="0 1 16 16">
                                        <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1
                                            0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0
                                            0 1 8 2Z">
                                        </path>
                                    </svg>
                                </button>
                                <div id="newRowIng py-1">
                                    <input type="hidden" id="ingredientsCount" value="0">
                                    <template x-for="(ingredient,index) in recipeToUpdate.ingredients">
                                        <div class="input-group pb-1">
                                            <input type="text" class="form-control py-1" id="recipeIngredients"
                                                name="recipeIngredients" x-model="recipeToUpdate.ingredients[index]"
                                                placeholder="Ingredients" aria-describedby="removeIngredient" required>
                                            <button type="button" class="btn btn-danger btn-sm" id="removeIngredient"
                                                tabindex="-1" x-on:click="recipeToUpdate.ingredients.splice(index,1)">
                                                <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12"
                                                    fill="currentColor" class="bi bi-trash3-fill" viewBox="0 0 16 16">
                                                    <path
                                                        d="M11 1.5v1h3.5a.5.5 0 0 1 0 1h-.538l-.853 10.66A2 2 0 0 1 11.115 16h-6.23a2 2 0 0 1-1.994-1.84L2.038 3.5H1.5a.5.5 0 0 1 0-1H5v-1A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5Zm-5 0v1h4v-1a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5ZM4.5 5.029l.5 8.5a.5.5 0 1 0 .998-.06l-.5-8.5a.5.5 0 1 0-.998.06Zm6.53-.528a.5.5 0 0 0-.528.47l-.5 8.5a.5.5 0 0 0 .998.058l.5-8.5a.5.5 0 0 0-.47-.528ZM8 4.5a.5.5 0 0 0-.5.5v8.5a.5.5 0 0 0 1 0V5a.5.5 0 0 0-.5-.5Z">
                                                    </path>
                                                </svg>
                                            </button>
                                        </div>
                                    </template>
                                </div>
                            </div>
                            <div class="form-group py-1">
                                <label for="recipeInstructions">Instructions</label>
                                <button type="button" class="btn btn-sm mx-3 my-1"
                                    style="background-color: #2C7A48; color:white;"
                                    x-on:click="recipeToUpdate.instructions.push(null)">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
                                        class="bi bi-plus-lg" viewBox="0 1 16 16">
                                        <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1
                                            0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0
                                            0 1 8 2Z">
                                        </path>
                                    </svg>
                                </button>
                                <div id="newRowIns py-1">
                                    <input type="hidden" id="instructionsCount" value="0">
                                    <template x-for="(instruction,index) in recipeToUpdate.instructions">
                                        <div class="input-group pb-1">
                                            <input type="text" class="form-control py-1" id="recipeInstructions"
                                                name="recipeInstructions" x-model="recipeToUpdate.instructions[index]"
                                                placeholder="Instruction" aria-describedby="removeInstruction" required>
                                            <button type="button" class="btn btn-danger btn-sm" id="removeInstruction"
                                                tabindex="-1" x-on:click="recipeToUpdate.instructions.splice(index,1)">
                                                <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12"
                                                    fill="currentColor" class="bi bi-trash3-fill" viewBox="0 0 16 16">
                                                    <path
                                                        d="M11 1.5v1h3.5a.5.5 0 0 1 0 1h-.538l-.853 10.66A2 2 0 0 1 11.115 16h-6.23a2 2 0 0 1-1.994-1.84L2.038 3.5H1.5a.5.5 0 0 1 0-1H5v-1A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5Zm-5 0v1h4v-1a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5ZM4.5 5.029l.5 8.5a.5.5 0 1 0 .998-.06l-.5-8.5a.5.5 0 1 0-.998.06Zm6.53-.528a.5.5 0 0 0-.528.47l-.5 8.5a.5.5 0 0 0 .998.058l.5-8.5a.5.5 0 0 0-.47-.528ZM8 4.5a.5.5 0 0 0-.5.5v8.5a.5.5 0 0 0 1 0V5a.5.5 0 0 0-.5-.5Z">
                                                    </path>
                                                </svg>
                                            </button>
                                        </div>
                                    </template>
                                </div>
                            </div>
                            <div class="form-group py-1">
                                <label for="recipeCategories">Categories</label>
                                <select class="form-control" id="recipeCategories" x-model="selectedCategories.names"
                                    multiple>
                                    <template x-for="category in myCategories">
                                        <option x-text="category.name" x-bind:value="category.name"
                                            x-bind:label="category.name"
                                            x-bind:selected="recipeToUpdate.categories.find(myCategory=>myCategory.name === category.name) !==undefined?true:false">
                                        </option>
                                    </template>
                                </select>
                            </div>
                            <div class="d-grid gap-2 d-md-flex justify-content-md-center">
                                <input type="submit" class="btn m-2" value="Update recipe" id="submitbutton"
                                    style="color: white; background-color:#1c4d2d;" x-on:click="updateRecipe = 0" />
                            </div>
                        </form>

                    </div>
                </div>
            </template>
            @* single recipe details *@
            <template x-for="recipePicked in loadedRecipes">
                <div class="row justify-content-center p-3 pb-4" x-show="whichRecipe === recipePicked.id"
                    x-transition.duration.600ms x-cloak>
                    <div style="background-color: white;" id="recipePicked.id"
                        class="border-bottom round col-lg-9 shadow-lg pb-2">
                        <div class="row justify-content-end">
                            <div class="col-sm-auto align-self-end">
                                <button class="btn"
                                    x-on:click="whichRecipe = 0;detailCards = true;  window.location.hash = '#recipesTitle'">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
                                        class="bi bi-x-lg" viewBox="0 0 16 16">
                                        <path
                                            d="M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8 2.146 2.854Z" />
                                    </svg>
                                </button>
                            </div>
                        </div>
                        <div class="row justify-content-center text-center">
                            <div class="col-md-4 border-bottom">
                                <h1 class="lead fs-2 pt-2" x-text="recipePicked.title"></h1>
                            </div>
                            <div class="col-sm-auto p-0">
                                <button class="btn btn-sm my-2"
                                    x-on:click="updateRecipe = recipePicked.id; whichRecipe = 0">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
                                        class="bi bi-pencil-square" viewBox="0 0 16 16">
                                        <path
                                            d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z" />
                                        <path fill-rule="evenodd"
                                            d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z" />
                                    </svg>
                                </button>
                            </div>
                            <div class="col-sm-auto p-0">
                                <div>
                                    <button class="btn btn-sm my-2" x-on:click="deleteRecipeAsync(recipePicked)">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="red"
                                            class="bi bi-trash3-fill" viewBox="0 0 16 16">
                                            <path
                                                d="M11 1.5v1h3.5a.5.5 0 0 1 0 1h-.538l-.853 10.66A2 2 0 0 1 11.115 16h-6.23a2 2 0 0 1-1.994-1.84L2.038 3.5H1.5a.5.5 0 0 1 0-1H5v-1A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5Zm-5 0v1h4v-1a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5ZM4.5 5.029l.5 8.5a.5.5 0 1 0 .998-.06l-.5-8.5a.5.5 0 1 0-.998.06Zm6.53-.528a.5.5 0 0 0-.528.47l-.5 8.5a.5.5 0 0 0 .998.058l.5-8.5a.5.5 0 0 0-.47-.528ZM8 4.5a.5.5 0 0 0-.5.5v8.5a.5.5 0 0 0 1 0V5a.5.5 0 0 0-.5-.5Z">
                                            </path>
                                        </svg>
                                    </button>
                                </div>
                            </div>
                        </div>
                        <div class="row justify-content-center">
                            <div class=" col-lg-4 rounded ps-5 pt-4">
                                <table class="table table-hover rounded shadow-sm text-center"
                                    style="background-color:#F1EEE8 ;">
                                    <thead>
                                        <tr>
                                            <th class="fs-4" style="color: #135C2D;">Ingredients</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <template x-for="ingredient in recipePicked.ingredients">
                                            <tr>
                                                <td x-text="ingredient"></td>
                                            </tr>
                                        </template>
                                    </tbody>
                                </table>
                            </div>
                            <div class="col-lg-5 p-4">
                                <table class="table table-borderless">
                                    <thead class=" p-4">
                                        <tr>
                                            <th class="fs-4" style="color: #135C2D;">Instructions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <template x-for="instruction in recipePicked.instructions">
                                            <tr>
                                                <td x-text="instruction"></td>
                                            </tr>
                                        </template>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </template>
            @*Add new recipe button*@
            <div class="container text-center pb-3">
                <div class="row justify-content-lg-end">
                    <div class="col-md-4 justify-content-end">
                        <a class="lead m-3 fw-bold link-dark" href="#creationForms" style="color: #135C2D;">You
                            can add new recipes
                            here...</a>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>
@*Categories section*@
<section style="background-color: white;" class="p-5" id="categoriesSection">
    <div class="container" x-data="{categoriesList: [],whichCategory: 0,categoryToUpdate: {id: 0,name: ''},}"
        x-init="categoriesList = await getCategoriesAsync()">
        <div class="row justify-content-center">
            <div class="col-lg-5" style="background-color: #2C7A48; color:white;">
                <h1 class=" fs-3 fw-bold lead p-3">Categories</h1>
                <p class="lead mt-3 px-3 fs-5">Here you can find all the categories you have stored in our website. You
                    can update each Category by clicking on it, or add a new category by clicking the button below. </p>
                <div class="row justify-content-center">
                    <div class="col justify-content-end">
                        <a class="btn btn-dark m-2" href="#creationForms" style="opacity:80%;">Add a new
                            Category</a>
                    </div>
                    <div class="col-sm-4 p-0">
                        <object data="/images/online-grocery.svg" width="150" height="150"> </object>
                    </div>
                </div>
            </div>
            @*Categories cards*@
            <div class="col-lg-5">
                <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-md-4 pt-4">
                    <template x-for="category in categoriesList">
                        <div class="col">
                            <div class="card shadow-sm myCard mb-3" x-show="whichCategory != category.id"
                                x-on:click="whichCategory = category.id; categoryToUpdate = category">
                                <div class="card-body text-center">
                                    <h5 class="card-title fs-6" x-text="category.name"></h5>
                                </div>
                            </div>
                            <div class="card shadow-sm myCard mb-3" x-show="whichCategory === category.id">
                                <div class="card-body text-center">
                                    <form
                                        x-on:submit.prevent="async()=>{whichCategory = await updateCategoryAsync(categoryToUpdate, whichCategory)}">
                                        <input type="text" class="form-control" x-model="categoryToUpdate.name">
                                        <button type="submit" class="btn btn-sm btn-dark mt-2">Update</button>
                                        <a class="link-dark" x-on:click="whichCategory = 0">Cancel</a>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </template>
                </div>
            </div>
        </div>
    </div>
</section>
<section style="background-image: url('images/formmd.jpg');" id="creationForms">
    <div class="container-fluid">
        <div class="row justify-content-center p-4">
            @*Recipes Creation form*@
            <div class="col-md-5">
                <div x-data="{newRecipe: {id: '@Model.GetID()',title: '',ingredients: [],instructions: [],categories: []},myCategories: []}"
                    x-init="myCategories = await getCategoriesAsync()">
                    <form method="post" x-on:submit.prevent="async()=>{await recipeToPostAsync(newRecipe,myCategories)}"
                        class="form-control shadow-sm">
                        <div class="form-label text-center">
                            <h1 class="lead fs-3 ">Add new recipe
                            </h1>
                        </div>
                        <div class="form-group py-1">
                            <label for="title">Title</label>
                            <input type="text" class="form-control" id="title" name="title" x-model="newRecipe.title"
                                placeholder="Title" required>
                        </div>
                        <div class="form-group py-1">
                            <label for="recipeIngredients">Ingredients</label>
                            <button type="button" class="btn btn-sm mx-3 my-1"
                                style="background-color: #2C7A48; color:white;"
                                x-on:click="newRecipe.ingredients.push(null)">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
                                    class="bi bi-plus-lg" viewBox="0 1 16 16">
                                    <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1
                                            0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0
                                            0 1 8 2Z">
                                    </path>
                                </svg>
                            </button>
                            <div id="newRowIng py-1">
                                <input type="hidden" id="ingredientsCount" value="0">
                                <template x-for="(ingredient,index) in newRecipe.ingredients">
                                    <div class="input-group pb-1">
                                        <input type="text" class="form-control py-1" id="recipeIngredients"
                                            name="recipeIngredients" x-model="newRecipe.ingredients[index]"
                                            placeholder="Ingredients" aria-describedby="removeIngredient" required>
                                        <button type="button" tabindex="-1" class="btn btn-danger btn-sm"
                                            id="removeIngredient" x-on:click="newRecipe.ingredients.splice(index,1)">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12"
                                                fill="currentColor" class="bi bi-trash3-fill" viewBox="0 0 16 16">
                                                <path
                                                    d="M11 1.5v1h3.5a.5.5 0 0 1 0 1h-.538l-.853 10.66A2 2 0 0 1 11.115 16h-6.23a2 2 0 0 1-1.994-1.84L2.038 3.5H1.5a.5.5 0 0 1 0-1H5v-1A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5Zm-5 0v1h4v-1a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5ZM4.5 5.029l.5 8.5a.5.5 0 1 0 .998-.06l-.5-8.5a.5.5 0 1 0-.998.06Zm6.53-.528a.5.5 0 0 0-.528.47l-.5 8.5a.5.5 0 0 0 .998.058l.5-8.5a.5.5 0 0 0-.47-.528ZM8 4.5a.5.5 0 0 0-.5.5v8.5a.5.5 0 0 0 1 0V5a.5.5 0 0 0-.5-.5Z">
                                                </path>
                                            </svg>
                                        </button>
                                    </div>
                                </template>
                            </div>
                        </div>
                        <div class="form-group py-1">
                            <label for="recipeInstructions">Instructions</label>
                            <button type="button" class="btn btn-sm mx-3 my-1"
                                style="background-color: #2C7A48; color:white;"
                                x-on:click="newRecipe.instructions.push(null)">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
                                    class="bi bi-plus-lg" viewBox="0 1 16 16">
                                    <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1
                                            0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0
                                            0 1 8 2Z">
                                    </path>
                                </svg>
                            </button>
                            <div id="newRowIns py-1">
                                <input type="hidden" id="instructionsCount" value="0">
                                <template x-for="(instruction,index) in newRecipe.instructions">
                                    <div class="input-group pb-1">
                                        <input type="text" class="form-control py-1" id="recipeInstructions"
                                            name="recipeInstructions" x-model="newRecipe.instructions[index]"
                                            placeholder="Instruction" aria-describedby="removeInstruction" required>
                                        <button type="button" class="btn btn-danger btn-sm" id="removeInstruction"
                                            x-on:click="newRecipe.instructions.splice(index,1)" tabindex="-1">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12"
                                                fill="currentColor" class="bi bi-trash3-fill" viewBox="0 0 16 16">
                                                <path
                                                    d="M11 1.5v1h3.5a.5.5 0 0 1 0 1h-.538l-.853 10.66A2 2 0 0 1 11.115 16h-6.23a2 2 0 0 1-1.994-1.84L2.038 3.5H1.5a.5.5 0 0 1 0-1H5v-1A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5Zm-5 0v1h4v-1a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5ZM4.5 5.029l.5 8.5a.5.5 0 1 0 .998-.06l-.5-8.5a.5.5 0 1 0-.998.06Zm6.53-.528a.5.5 0 0 0-.528.47l-.5 8.5a.5.5 0 0 0 .998.058l.5-8.5a.5.5 0 0 0-.47-.528ZM8 4.5a.5.5 0 0 0-.5.5v8.5a.5.5 0 0 0 1 0V5a.5.5 0 0 0-.5-.5Z">
                                                </path>
                                            </svg>
                                        </button>
                                    </div>
                                </template>
                            </div>
                        </div>
                        <div class="form-group py-1">
                            <label for="recipeCategories">Categories</label>
                            <select class="form-control" id="recipeCategories" x-model="newRecipe.categories" multiple>
                                <template x-for="category in myCategories">
                                    <option x-text="category.name"></option>
                                </template>
                            </select>
                        </div>
                        <div class="d-grid gap-2 d-md-flex justify-content-md-center">
                            <input type="submit" class="btn m-2" value="Create recipe" id="submitbutton"
                                style="color: white; background-color:#1c4d2d;" />
                        </div>
                    </form>
                </div>
            </div>
            @*Categories Creation form*@
            <div class="col-md-5">
                <div x-data="{ newCategory: {id: '@Model.GetID()',name: ''}}">
                    <form method="post" class="form-control shadow-sm"
                        x-on:submit.prevent="async ()=>{await categoryToPostAsync(newCategory)}">
                        <div class="form-label text-center">
                            <h1 class="lead fs-3 ">Add new category
                            </h1>
                        </div>
                        <div class="form-group">
                            <label for="title">Name</label>
                            <input type="text" class="form-control" id="title" name="title"
                                placeholder="Type category name" x-model="newCategory.name" required>
                        </div>
                        <div class="d-grid gap-2 d-md-flex justify-content-md-center">
                            <input type="submit" class="btn m-2" value="Create category" id="submitbutton"
                                style="color: white; background-color:#1c4d2d;" />
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</section>